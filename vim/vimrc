" 基本设置
set nocompatible
set nobackup

" 编码设置
set encoding=utf-8
set fileencodings=utf-8,ucs-bom,gb18030,cp936,big5,latin1

" 界面设置
set laststatus=2
set ruler
set nu
" set autoindent
filetype indent on
set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
syntax enable
syntax on
set cursorline
set cursorcolumn
set nowrap

" 搜索设置
set incsearch
set hlsearch
set wildmenu " 自身命令行模式智能补全

" 主题颜色设置
set background=dark
colorscheme molokai
" colorscheme phd

" 字体设置
set guifont=YaHei\ Consolas\ Hybrid\ 11.5

" 按键设置
let mapleader=";"

" 快捷键
" 行首行尾
nmap lb 0
nmap le $
" vnoremap <Leader>y "+y
" vnoremap <Leader>p "+p
" nmap <Leader>q :q<CR>
" nmap <Leader>w :w<CR>
" nmap <Leader>WQ :wa<CR>:q<CR>
" nmap <Leader>Q :qa!<CR>
" nnoremap nw <C-W><C-W>
" nnoremap <Leader>lw <C-W>l
" nnoremap <Leader>hw <C-W>h
" nnoremap <Leader>kw <C-W>k
" nnoremap <Leader>jw <C-W>j
nmap <Leader>pa %


" pathogen 
runtime bundle/pathogen/autoload/pathogen.vim
execute pathogen#infect()

" 状态栏插件
let g:Powerline_colorscheme='default'

" 缩进高亮插件
let g:indent_guides_enable_on_vim_startup=0
let g:indent_guides_start_level=2
let g:indent_guides_guide_size=1
:nmap <silent><Leader>i <Plug>IndentGuidesToggle

" 标签插件
let g:SignatureMap = {
        \ 'Leader'             :  "m",
        \ 'PlaceNextMark'      :  "m,",
        \ 'ToggleMarkAtLine'   :  "m.",
        \ 'PurgeMarksAtLine'   :  "m-",
        \ 'DeleteMark'         :  "dm",
        \ 'PurgeMarks'         :  "mda",
        \ 'PurgeMarkers'       :  "m<BS>",
        \ 'GotoNextLineAlpha'  :  "']",
        \ 'GotoPrevLineAlpha'  :  "'[",
        \ 'GotoNextSpotAlpha'  :  "`]",
        \ 'GotoPrevSpotAlpha'  :  "`[",
        \ 'GotoNextLineByPos'  :  "]'",
        \ 'GotoPrevLineByPos'  :  "['",
        \ 'GotoNextSpotByPos'  :  "mn",
        \ 'GotoPrevSpotByPos'  :  "mp",
        \ 'GotoNextMarker'     :  "[+",
        \ 'GotoPrevMarker'     :  "[-",
        \ 'GotoNextMarkerAny'  :  "]=",
        \ 'GotoPrevMarkerAny'  :  "[=",
        \ 'ListLocalMarks'     :  "ms",
        \ 'ListLocalMarkers'   :  "m?"
        \ }

" 接口与实现快速切换插件 a.vim
nmap <Leader>ch :A<CR>
nmap <Leader>sch :AS<CR>

" NERDTree插件 文件目录
nmap <Leader>t :NERDTreeToggle<CR>
au vimenter * NERDTree
" Go to previous (last accessed) window.
autocmd VimEnter * wincmd p
" exit vim when only NERDTree lefted.
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType")
            \&& b:NERDTreeType == "primary") | q | endif
let NERDTreeShowBookmarks=1
" let NERDTreeWinPos="right"

" 代码折叠 za打开或关闭当前折叠 zM关闭所有折叠 zR打开所有折叠
set foldmethod=syntax
set nofoldenable


" 文件类型侦测
filetype on
filetype plugin on

" 补全提示即时过滤和匹配
" set completeopt=longest,menu


" ############################## "

" 额外的主题
" au BufNewFile,BufRead *.lex,*.flex,*.jflex set filetype=jflex
" au Syntax jflex    so ~/.vim/syntax/jflex.vim
" au BufNewFile,BufRead *.scala set filetype=scala
" au Syntax scala    so ~/.vim/syntax/scala.vim
" au BufNewFile,BufRead *.gradle setf groovy

" lisp语法
" au syntax scheme,lisp set lisp

" python将tab转换为空格
" au syntax python set expandtab

" 基本编程符号补全
" au syntax c,cpp,java,groovy inoremap { {<cr>}<esc>kA<cr><tab>| inoremap ( ()<esc>i|inoremap " ""<esc>i|inoremap [ []<esc>i

